package br.com.sistemacomercial.model;

import java.io.Serializable;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import br.com.sistemacomercial.enums.TipoBloqueioAviso;

@Entity(name="cli_bloqueio_aviso")
public class ClienteBloqueioAviso implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    @Fetch(FetchMode.JOIN)
    @ManyToOne(optional = false, fetch = FetchType.EAGER)
    @JoinColumn(name = "cliente_id")
    private Cliente cliente;
    @ManyToOne
    @JoinColumn(name = "motivobloqueio_id")
    private MotivoBloqueio motivoBloqueio;
    private String aviso;
    @Column(name="tipo")
    @Enumerated(EnumType.ORDINAL)
    private TipoBloqueioAviso tipoBloqueioAviso;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(nullable = false)
    private Date dataInicio = new Date();
    @ManyToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "funcionario_inicio_id")
    private Funcionario funcionarioInicio;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(nullable = true)
    private Date dataFim;
    @ManyToOne(fetch = FetchType.LAZY, optional = true)
    @JoinColumn(name = "funcionario_fim_id")
    private Funcionario funcionarioFim;

    public ClienteBloqueioAviso() {
    }

    public ClienteBloqueioAviso(Cliente cliente, MotivoBloqueio motivoBloqueio, TipoBloqueioAviso tipoBloqueio, Funcionario funcionarioInicio) {
        this.motivoBloqueio = motivoBloqueio;
        this.tipoBloqueioAviso = tipoBloqueio;
        this.funcionarioInicio = funcionarioInicio;
        this.cliente = cliente;
    }

    public ClienteBloqueioAviso(Cliente cliente, MotivoBloqueio motivoBloqueio, TipoBloqueioAviso tipoBloqueio, Funcionario funcionarioInicio, String aviso) {
        this.motivoBloqueio = motivoBloqueio;
        this.tipoBloqueioAviso = tipoBloqueio;
        this.funcionarioInicio = funcionarioInicio;
        this.cliente = cliente;
        this.aviso = aviso;
    }
    
    public Cliente getCliente() {
        return cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    public Date getDataInicio() {
        return dataInicio;
    }

    public void setDataInicio(Date dataInicio) {
        this.dataInicio = dataInicio;
    }

    public Funcionario getFuncionarioInicio() {
        return funcionarioInicio;
    }

    public void setFuncionarioInicio(Funcionario funcionarioInicio) {
        this.funcionarioInicio = funcionarioInicio;
    }

    public Funcionario getFuncionarioFim() {
        return funcionarioFim;
    }

    public void setFuncionarioFim(Funcionario funcionarioFim) {
        this.funcionarioFim = funcionarioFim;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getAviso() {
        return aviso;
    }

    public void setAviso(String aviso) {
        this.aviso = aviso;
    }

    public TipoBloqueioAviso getTipoBloqueioAviso() {
        return tipoBloqueioAviso;
    }

    public void setTipoBloqueioAviso(TipoBloqueioAviso tipoBloqueioAviso) {
        this.tipoBloqueioAviso = tipoBloqueioAviso;
    }

    public Date getDataFim() {
        return dataFim;
    }

    public void setDataFim(Date dataFim) {
        this.dataFim = dataFim;
    }

    public Funcionario getFuncionarioBloqueioAviso() {
        return funcionarioInicio;
    }

    public void setFuncionarioBloqueioAviso(Funcionario funcionarioBloqueioAviso) {
        this.funcionarioInicio = funcionarioBloqueioAviso;
    }

    public MotivoBloqueio getMotivoBloqueio() {
        return motivoBloqueio;
    }

    public void setMotivoBloqueio(MotivoBloqueio motivoBloqueio) {
        this.motivoBloqueio = motivoBloqueio;
    }

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		ClienteBloqueioAviso other = (ClienteBloqueioAviso) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}
    
    
}
