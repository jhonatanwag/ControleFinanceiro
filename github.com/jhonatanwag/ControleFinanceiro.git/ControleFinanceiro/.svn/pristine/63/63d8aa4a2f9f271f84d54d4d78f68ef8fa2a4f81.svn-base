package br.com.sistemacomercial.controle;

import java.io.Serializable;
import java.util.List;

import javax.faces.view.ViewScoped;
import javax.inject.Inject;
import javax.inject.Named;

import org.primefaces.event.SelectEvent;

import br.com.sistemacomercial.model.Empresa;
import br.com.sistemacomercial.model.Filial;
import br.com.sistemacomercial.model.Pessoa;
import br.com.sistemacomercial.repository.Pessoas;
import br.com.sistemacomercial.repository.filter.PessoaFilter;
import br.com.sistemacomercial.service.CadastroEmpresaService;
import br.com.sistemacomercial.util.jsf.FacesUtil;

@Named
@ViewScoped
public class CadastroEmpresaBean extends BeanAbstrato<Empresa> implements Serializable {

	private static final long serialVersionUID = 1L;

	@Inject
	private CadastroEmpresaService cadastroEmpresaService;
	@Inject
	private Pessoas pessoas;

	private Pessoa pessoaSelecionada;
	private Filial filialSelecionada;
	private Boolean editandoFilial = false;
	private List<Pessoa> todasPessoas;

	@Override
	public void inicializar() {
		if (this.getObjeto() == null) {
			limpar();
		}
		todasPessoas = pessoas.filtrados(new PessoaFilter());
	}

	@Override
	protected void limpar() {
		setObjeto(new Empresa());
		setPessoaSelecionada(new Pessoa());
	}

	@Override
	public void salvar() {
		setObjeto(cadastroEmpresaService.salvar(getObjeto()));
		limpar();
		FacesUtil.addInfoMessage("Empresa salva com sucesso!");
	}

	@Override
	public void setObjeto(Empresa objeto) {
		super.setObjeto(objeto);
		if (getObjeto() != null) {
		}
	}

	@Override
	public boolean isEditando() {
		return this.getObjeto().getId() != null;
	}

	public Filial getFilialSelecionada() {
		return filialSelecionada;
	}

	public void setFilialSelecionada(Filial filialSelecionada) {
		this.filialSelecionada = filialSelecionada;
	}

	/* Filial - início */
	
	

	/* Pessoa Inicio */
	public Pessoa getPessoaSelecionada() {
		return pessoaSelecionada;
	}

	public void setPessoaSelecionada(Pessoa pessoaSelecionada) {
		this.pessoaSelecionada = pessoaSelecionada;
	}

	public void pessoaPorId() {
		Pessoa pessoa = pessoas.porId((getPessoaSelecionada().getId() == null ? -1 : getPessoaSelecionada().getId()));
		if (pessoa != null) {
			setPessoaSelecionada(pessoa);
			getFilialSelecionada().setPessoa(pessoa);
		} else {
			setPessoaSelecionada(new Pessoa());
			getFilialSelecionada().setPessoa(null);
			FacesUtil.addErrorMessage("Pessoa não encontrada para o código informado!");
		}
	}

	public void pessoaSelecao(SelectEvent event) {
		Pessoa pessoa = (Pessoa) event.getObject();
		this.pessoaSelecionada = pessoa;
		getFilialSelecionada().setPessoa(pessoa);
	}

	/* Pessoa Fim */

	public void novaFilial() {
		setFilialSelecionada(new Filial());
		getFilialSelecionada().setEmpresa(getObjeto());
		setPessoaSelecionada(new Pessoa());
		this.editandoFilial = false;
	}

	public void alterarFilial() {
		this.editandoFilial = true;
		if (getObjeto() != null) {
			if (getFilialSelecionada() != null) {
				setPessoaSelecionada(getFilialSelecionada().getPessoa());
			}
		}
	}

	public void confirmarFilial() {
		if (!this.editandoFilial) {
			getFilialSelecionada().setEmpresa(getObjeto());
			getObjeto().getFiliais().add(getFilialSelecionada());
		}
	}

	public void excluirFilial() {
		cadastroEmpresaService.excluirFilial(getFilialSelecionada());
		getObjeto().getFiliais().remove(getFilialSelecionada());
	}

	public List<Pessoa> getTodasPessoas() {
		return todasPessoas;
	}


	/* Filial - fim */

}