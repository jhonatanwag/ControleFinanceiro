package br.com.sistemacomercial.repository;

import java.io.Serializable;
import java.util.List;

import javax.inject.Inject;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;

import br.com.sistemacomercial.model.Inventario;
import br.com.sistemacomercial.model.Usuario;
import br.com.sistemacomercial.repository.filter.InventarioFilter;

public class Inventarios extends RepositoryAbstrato<Inventario> implements Serializable {

	private static final long serialVersionUID = 1L;

	@Inject
	private Usuarios usuarios;

	public Inventarios() {
		super(Inventario.class);
	}

	@Override
	public Inventario salvar(Inventario objeto) {
		return super.salvar(objeto);
	}

	public Usuario salvar(Usuario usuario) {
		return usuarios.salvar(usuario);
	}

	@SuppressWarnings("unchecked")
	public List<Inventario> filtrados(InventarioFilter filtro) {
		Session session = manager.unwrap(Session.class);
		Criteria criteria = session.createCriteria(Inventario.class);

		if (filtro.getIdDe() != null && filtro.getIdAte() != null) {
			criteria.add(Restrictions.between("id", filtro.getIdDe(), filtro.getIdAte()));
		}

		// if (StringUtils.isNotBlank(filtro.getNome())) {
		// criteria.add(Restrictions.ilike("nome", filtro.getNome(),
		// MatchMode.ANYWHERE));
		// }
		//
		// if (StringUtils.isNotBlank(filtro.getRazaoSocial())) {
		// criteria.add(Restrictions.ilike("razaoSocial",
		// filtro.getRazaoSocial(), MatchMode.ANYWHERE));
		// }

		// if (filtro.getDataCadastroInicio() != null &&
		// filtro.getDataCadastroFim() != null) {
		// criteria.add(
		// Restrictions.between("dataCadastro", filtro.getDataCadastroInicio(),
		// filtro.getDataCadastroFim()));
		// }

		return criteria.addOrder(Order.asc("dataAbertura")).list();
	}

}
