/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sistemacomercial.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import br.com.sistemacomercial.enums.SituacaoCadastro;


/**
 * 
 * @author Danilo
 */
@Entity
@Table(name="deposito")
public class Deposito implements Serializable {
	
	private static final long serialVersionUID = 1L;
	@Id
	@GeneratedValue
	@Column(name = "dep_id")
	private Long id;
	@JoinColumn(name = "filial_id")
	private Filial filial;
    @Column(name="codigo", unique=true)
	private String codigoDeposito;
	@Column(name="des_deposito", length = 100)
	private String descricaoDeposito;		
//	@OneToMany(mappedBy = "deposito", fetch = FetchType.EAGER)
//	private List<Estoque> estoques = new ArrayList<Estoque>();
	@Enumerated(EnumType.ORDINAL)
	@Column(name="situacao_cadastro", nullable=false)
	private SituacaoCadastro situacaoCadastro = SituacaoCadastro.ATIVO;

	public Deposito() {
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Filial getFilial() {
		return filial;
	}

	public void setFilial(Filial filial) {
		this.filial = filial;
	}

	public String getCodigoDeposito() {
		return codigoDeposito;
	}

	public void setCodigoDeposito(String codigoDeposito) {
		this.codigoDeposito = codigoDeposito;
	}

	public String getDescricaoDeposito() {
		return descricaoDeposito;
	}

	public void setDescricaoDeposito(String descricaoDeposito) {
		this.descricaoDeposito = descricaoDeposito;
	}

//	public List<Estoque> getEstoques() {
//		return estoques;
//	}
//
//	public void setEstoques(List<Estoque> estoques) {
//		this.estoques = estoques;
//	}

	public SituacaoCadastro getSituacaoCadastro() {
		return situacaoCadastro;
	}

	public void setSituacaoCadastro(SituacaoCadastro situacaoCadastro) {
		this.situacaoCadastro = situacaoCadastro;
	}
	
	public String getDescricaoDepFilial(){
		return this.getFilial().getDescricaoFilialEmpresa() +"-"+ this.descricaoDeposito;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Deposito other = (Deposito) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	
	
	

	
}
